node('main'){
    stage('AWS CLI Version'){
        sh "aws --version"
    }
    stages {
      stage('cr lb'){
           sh "aws elbv2 create-listener --load-balancer-arn ${jsonitem['LoadBalancers'][0]['LoadBalancerArn']} --protocol HTTP --port 80 --default-actions Type=forward,TargetGroupArn=${jsonitem1['TargetGroups'][0]['TargetGroupArn']} --region us-east-1"
               }
           stage ('creating aclc'){
           sh "aws autoscaling create-launch-configuration --launch-configuration-name my-launchcfg-cli --image-id ami-04505e74c0741db8d --instance-type t2.micro --security-groups sg-01361c1aff01f515a --key-name newawskey --user-data file://userdata.txt --iam-instance-profile demo_full_access --user-data file://userdata.txt --region us-east-1"
          }
           stage('creating asg'){
           sh "aws autoscaling create-auto-scaling-group --auto-scaling-group-name my-asg3-cli --launch-configuration-name my-launchcfg-cli --max-size 2 --min-size 1 --desired-capacity 1 --target-group-arns ${jsonitem1['TargetGroups'][0]['TargetGroupArn']} --availability-zones us-east-1a --region us-east-1"
        } 
   }  
      
    }
